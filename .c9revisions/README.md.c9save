{"ts":1381862393246,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# LPP - Práctica 5 #\n## Pruebas unitarias ##\n\n### Guión  \nEl guión de esta práctica se encuentra [aquí](https://github.com/coromoto/PruebasUnitarias)\n\n### Ejecución\nPara la ejecución de la **práctica**\n\n    rake\n\nPara la ejecución de los **test**\n\n    rake test\n\n### Implementación\nÉsta práctica contiene 4 ficheros:\n   1. `racional.rb`, donde se encuentra la clase `Fraccion`\n   2. `tc_racional.rb`, donde se encuentran los test\n   3. `mcm.rb`, método del Mínimo Común Múltiplo\n   4. `mcd.rb`, método del Máximo Común Divisor\n\nEl guión provee de una clase `Fraccion` para la representación de los números racionales.\nCada objeto de dicha clase debe representar un número racional reducido a su mínima expresión.\n\n    class Fraccion\n       def initialize(*args)\n          ...\n          Constructor. Almacena un número racional reducido a su mínima expresión\n          ...\n       end\n\n       def to_s\n          ...\n          Cadena con la representación del número racional\n          ...\n       end\n\n       def operandoMin(c, d)\n          ...\n          Reducción de un número (c/d) a su mínima expresión\n          ...\n       end\n\n       def suma(*args)\n          ...\n          Suma del número (objeto) actual y otro número\n          ...\n       end\n\n       def resta(*args)\n          ...\n          Resta del número (objeto) actual y otro número\n          ...\n       end\n\n       def producto(*args)\n          ...\n          Producto del número (objeto) actual y otro número\n          ...\n       end\n\n       def division(*args)\n          ...\n          División del número (objeto) actual y otro número\n          ...\n       end\n    end\n\nAutor\n-------\n| ALUMNO | CORREO |\n| ---------- | ---------- |\n| José Alberto Pérez Melián   | alu0100537291[AT]ull.edu.es   |"]],"start1":0,"start2":0,"length1":0,"length2":1756}]],"length":1756}
